{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\n// 匹配到的是分组是一个标签名， <xxx 匹配到的是开始标签的名字\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`)\r\n// console.log(startTagOpen)\r\n// 匹配的是 </xxx> 最终匹配到的分组就是结束标签的名字\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)\r\n// console.log(endTag)\r\n// 第一个分组就是属性的 key value，就是分组 3/4/5\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\n// console.log(attribute)\r\n// <div> <br />\r\nconst startTagclose = /^\\s*(\\/?)>/\r\n// console.log(startTagclose)\r\n// 匹配到的内容是 {{}} 中的变量\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n// console.log(defaultTagRE)\r\n\r\n// vue3 采用的不是正则\r\n// 对模板进行编译处理\r\n\r\n/*\r\n  {\r\n    tag: 'div,\r\n    type: 1,\r\n    attrs: [{name, age. address}],\r\n    parent: null,\r\n    children: []\r\n  }\r\n\r\n\r\n*/\r\n\r\n\r\nexport default function parseHTML(html) {\r\n  const ELEMENT_TYPE = 1\r\n  const TEXT_TYPE = 2\r\n  const stack = [] // 用于存放元素的 ast 语法树对象\r\n  let currentParent // 指向栈中的最后一个\r\n  let root\r\n  function createASTElement(tag, attrs) {\r\n    return {\r\n      tag,\r\n      type: ELEMENT_TYPE,\r\n      children: [],\r\n      attrs,\r\n      parent: null\r\n    }\r\n  }\r\n  // 最终需要利用栈性结构转换为一棵抽象语法树\r\n  function start(tag, attrs) {\r\n    let node = createASTElement(tag, attrs) // 创造一个 ast 节点\r\n    if(!root) { // 看一下是否是空树\r\n      root = node // 如果为空，则当前是树的根节点\r\n    }\r\n    if(currentParent) {\r\n      node.parent = currentParent // 只赋予了 parent 属性\r\n      currentParent.children.push(node) // parent 的 children 也许要赋值\r\n    }\r\n    stack.push(node)\r\n    currentParent = node // currentParent 为栈中的最后一个\r\n    // console.log('开始', tag, attrs)\r\n  }\r\n  function chars(text) {\r\n    text = text.replace(/\\s/g, '') // 如果空格超过 2\r\n    // console.log('文本', text)\r\n    text && currentParent.children.push({\r\n      type: TEXT_TYPE,\r\n      text,\r\n      parent: currentParent\r\n    })\r\n  }\r\n  function end(tag) {\r\n    // console.log('结束', tag)\r\n    let node = stack.pop() // 弹出最后一个\r\n    currentParent = stack[stack.length - 1]\r\n  }\r\n  // html 第一个肯定是一个 <\r\n  function advance(n) {\r\n    html = html.substring(n)\r\n  }\r\n  function parseStartTag() {\r\n    const start = html.match(startTagOpen)\r\n    // console.log(start)\r\n    if (start) {\r\n      const match = {\r\n        tagName: start[1], // 标签名\r\n        attrs: [],\r\n      }\r\n      advance(start[0].length)\r\n      // 如果不是开始标签的结束，就一直匹配下去\r\n      let attr, end\r\n      while (!(end = html.match(startTagclose)) && (attr = html.match(attribute))) {\r\n        advance(attr[0].length)\r\n        match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] || true })\r\n      }\r\n      if (end) {\r\n        advance(end[0].length)\r\n      }\r\n      // // console.log(match)\r\n      return match\r\n    }\r\n    // console.log(html)\r\n    return false\r\n  }\r\n  while (html) {\r\n    // 如果 textEnd 为 0，说明是一个开始标签的或结束标签\r\n    // 如果 textEnd > 0，则说明是文本的结束位置\r\n    let textEnd = html.indexOf('<') // 如果 indexOf 中的索引是 0，则说明是一个标签\r\n    if (textEnd === 0) {\r\n      const startTagMatch = parseStartTag() // 开始标签的匹配\r\n      if (startTagMatch) { // 解析到的开始标签\r\n        // // console.log(html)\r\n        start(startTagMatch.tagName, startTagMatch.attrs)\r\n        continue\r\n      }\r\n      let endTagMatch = html.match(endTag)\r\n      if(endTagMatch) {\r\n        advance(endTagMatch[0].length)\r\n        end(endTagMatch[1])\r\n        continue\r\n      }\r\n    }\r\n    if (textEnd > 0) {\r\n      let text = html.substring(0, textEnd) // 文本内容\r\n      if (text) {\r\n        chars(text)\r\n        advance(text.length) // 解析到的文本\r\n      }\r\n    }\r\n  }\r\n  return root // 不是开始标签\r\n}","import parseHTML from './parse'\r\n\r\nfunction genProps(attrs) {\r\n  let str = '' // { name, value }\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    let attr = attrs[i]\r\n    if (attr.name === 'style') {\r\n      // style:  { color: 'red' }\r\n      let obj = {}\r\n      attr.value.split(';').forEach(item => {\r\n        let [key, value] = item.split(':')\r\n        obj[key] = value\r\n      })\r\n      attr.value = obj\r\n    }\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n  }\r\n  return `{${str.slice(0, -1)}}`\r\n}\r\n\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\nfunction gen(node) {\r\n  console.log(node)\r\n  if (node.type === 1) {\r\n    return codegen(node)\r\n  } else {\r\n    // 文本\r\n    let text = node.text\r\n    console.log('text', text)\r\n    if(!defaultTagRE.test(text)) {\r\n      console.log('匹配成功')\r\n      return `_v(${JSON.stringify(text)})`\r\n    } else {\r\n      console.log('匹配成功')\r\n      // _v(_s(name) + 'hello' + _(name))\r\n      let tokens = []\r\n      let match\r\n      defaultTagRE.lastIndex = 0\r\n      let lastIndex = 0\r\n      while(match = defaultTagRE.exec(text)) {\r\n        let index = match.index // 匹配的位置，{{name}} hello {{age}}\r\n        if(index > lastIndex) {\r\n          tokens.push(JSON.stringify(text.slice(lastIndex, index)))\r\n        }\r\n\r\n        tokens.push(`_s(${match[1].trim()})`)\r\n        lastIndex = index + match[0].length\r\n      }\r\n      if(lastIndex < text.length) {\r\n        tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n      }\r\n      return `_v(${tokens.join('+')})`\r\n    }\r\n    return 'xxx'\r\n  }\r\n}\r\n\r\nfunction genChildren(children) {\r\n  console.log('children', children)\r\n  return children.map(child => {\r\n    console.log('child', child)\r\n    return gen(child)\r\n  })\r\n}\r\n\r\nfunction codegen(ast) {\r\n  let children = genChildren(ast.children)\r\n  let code = `_c('${ast.tag}', ${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'}${ast.children.length ? `,${children}` : ''})`\r\n  return code\r\n}\r\n\r\nexport default function complieToFunction(template) {\r\n  // 1. 将 template 转换为 ast 语法树\r\n  let ast = parseHTML(template)\r\n  // console.log(ast)\r\n  // 2. 生成 render 方法(render 方法返回的结果就是虚拟 DOM)\r\n  let code = codegen(ast)\r\n  console.log(code)\r\n  code = `with(this){return ${code}}`\r\n  let render = new Function(code) // 根据代码生成 render 函数\r\n  return render\r\n  // function render(h) {\r\n  //   return _c('div', { id: 'app' }, _c('div', { style: { color: 'red' } }, _v(_s(name) + 'hello'), _c('span', undefined, _v(_s(age)))))\r\n  // }\r\n  // console.log(template)\r\n}\r\n","// h() _c()\r\n\r\nexport function createElementVNode(vm, tag, data, ...children) {\r\n  if(data == null) {\r\n    data = {}\r\n  }\r\n  let key = data.key\r\n  if(key) {\r\n    delete data.key\r\n  }\r\n  return vnode(vm, tag, key, data, children)\r\n\r\n}\r\n\r\n// _v()\r\nexport function createTextVNode(vm, text) {\r\n  return vnode(vm, undefined, undefined, undefined, undefined, text)\r\n}\r\n\r\n// ast 做的是语法层面的转换，他描述的是语法本身(可以描述 js css html)\r\n// 虚拟 DOM 是描述的 DOM 元素，可以增加一些自定义属性(描述 DOM)\r\nfunction vnode(vm, tag, key, data, children, text) {\r\n  return {\r\n    vm,\r\n    tag,\r\n    key,\r\n    data,\r\n    children,\r\n    text,\r\n    // ...\r\n  }\r\n}","import { createElementVNode, createTextVNode } from \"./vdom\"\r\n\r\nfunction createElm(vnode) {\r\n  let { tag, data, children, text } = vnode\r\n  if(typeof tag === 'string') { // 标签\r\n    vnode.el = document.createElement(tag) // 这里将真实节点和虚拟节点对应起来，后续如果修改属性了\r\n\r\n    patchProps(vnode.el, data)\r\n\r\n    children.forEach(child => {\r\n      vnode.el.appendChild(createElm(child))\r\n    })\r\n  } else {\r\n    vnode.el = document.createTextNode(text)\r\n  }\r\n  return vnode.el\r\n}\r\n\r\nfunction patchProps(el, props) {\r\n  for(let key in props) {\r\n    if(key === 'style') { // style { color: 'red' }\r\n      for(let styleName in props['style']) {\r\n        el.style[styleName] = props.style[styleName]\r\n      }\r\n    } else {\r\n      el.setAttribute(key, props[key])\r\n    }\r\n  }\r\n}\r\n\r\nfunction patch(oldVNode, vnode) {\r\n  // 写的是初渲染流程\r\n  console.log(oldVNode)\r\n  const isRealElement = oldVNode.nodeType\r\n  if(isRealElement) {\r\n    const elm = oldVNode // 获取真实元素\r\n    const parentElm = elm.parentNode // 获取父元素\r\n    let newElm = createElm(vnode)\r\n    console.log('newElm', newElm)\r\n    parentElm.insertBefore(newElm, elm.nextSibling)\r\n    parentElm.removeChild(elm) // 删除老节点\r\n    return newElm\r\n  } else {\r\n    // diff 算法\r\n  }\r\n}\r\n\r\n\r\nexport function initLifeCycle(Vue) {\r\n  Vue.prototype._update = function(vnode) {\r\n    const vm = this\r\n    const el = vm.$el\r\n    // patch 既有初始化功能，又有更新的功能\r\n    // 将 vnode 转换为真实 DOM\r\n    console.log(vnode, el)\r\n    vm.$el = patch(el, vnode)\r\n  }\r\n  // _c('div', {}, ...children)\r\n  Vue.prototype._c = function() {\r\n    return createElementVNode(this, ...arguments)\r\n  }\r\n  // _v(text)\r\n  Vue.prototype._v = function() {\r\n    return createTextVNode(this, ...arguments)\r\n  }\r\n  Vue.prototype._s = function(value) {\r\n    if(typeof value !== 'object') return value\r\n    return JSON.stringify(value)\r\n  }\r\n  Vue.prototype._render = function() {\r\n    console.log('render', this)\r\n    // 让 with 中的 this 指向 vm\r\n    return this.$options.render.call(this) // 通过 ast 语法转义后生成的 render 方法\r\n  }\r\n}\r\n\r\nexport function mountComponent(vm, el) { // 这里的 el，是通过 querySelector 处理过的\r\n  vm.$el = el\r\n  // 1. 调用 render 犯法产生虚拟节点(虚拟 DOM)\r\n  vm._update(vm._render()) // vm.$options.render -> 返回虚拟节点\r\n  // 2. 根据虚拟 DOM 产生真实 DOM\r\n  // 3. 插入到 el 元素中\r\n\r\n}\r\n\r\n// Vue 核心流程 \r\n//  1. 创建响应式数据\r\n//  2. 模板转换成 ast 语法树\r\n//  3. 将 ast 语法树转换成 render 函数\r\n//  4. 后续每次数据更新可以只调用 render 函数，无需再次执行 ast 转换的过程\r\n\r\n// render 函数会产生虚拟节点(使用响应式数据)\r\n// 根据生成的虚拟节点创造真实的 DOM","\r\n// 对数组重写数组中的部分方法（能够修改数组本身）\r\nlet oldArrayProto = Array.prototype // 获取数组的原型\r\n\r\n// newArrayProto.__proto__ = oldArrayProto\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n\r\nlet methods = [ // 找到所有可以修改数组本身的方法\r\n  'push',\r\n  'pop',\r\n  'shift',\r\n  'unshift',\r\n  'reverse',\r\n  'sort',\r\n  'splice'\r\n] // concat、slice 等方法都不会改变原数组\r\n\r\nmethods.forEach(method => {\r\n  newArrayProto[method] = function(...args) { // 重写了数组的方法\r\n    // push()\r\n    const result = oldArrayProto[method].call(this, ...args) // 内部调用原来的方法\r\n    console.log('method', method)\r\n    // 我们需要对新增的数据再次进行劫持\r\n    let inserted\r\n    let ob = this.__ob__\r\n    switch(method) {\r\n      case 'push':\r\n      case 'unshift':\r\n        inserted = args\r\n        break\r\n      case 'splice':\r\n        inserted = args.slice(2)\r\n        break\r\n      defualt:\r\n        break\r\n    }\r\n    console.log(inserted) // 新增的内容\r\n    if(inserted) {\r\n      ob.observeArray(inserted)\r\n    }\r\n    // 我们需要对新增的数据再次进行劫持\r\n    return result\r\n  }\r\n})\r\n\r\n\r\n","import { newArrayProto } from './array'\r\n\r\nclass Observer {\r\n  constructor(data) {\r\n    // data.__ob__ = this // 给数据加了一个标识，如果数据上有 __ob__，则说明这个属性被观测过，！！！此写法会死循环！！！\r\n    Object.defineProperty(data, '__ob__', {\r\n      value: this,\r\n      enumerable: false\r\n    }) // 改成不可枚举\r\n    // Object.definePropetry 只能劫持已经存在的属性，后增或者删除的不可以\r\n    if(Array.isArray(data)) {\r\n      // 重写数组中的方法，7个可以直接修改数组本身的方法\r\n      data.__proto__ = newArrayProto // 保留数组原有的特性，并且可以重写部分方法\r\n      this.observeArray(data)\r\n    } else {\r\n      this.walk(data)\r\n    }\r\n  }\r\n  walk(data) {\r\n    // 循环对象，对属性依次劫持\r\n    // \"重新定义\"属性，性能比较差\r\n    Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n  }\r\n  observeArray(data) {\r\n    data.forEach(item => observe(item))\r\n  }\r\n}\r\n\r\nexport function defineReactive(target, key, value) {\r\n  observe(value) // 对所有的对象都进行属性劫持\r\n  // 闭包\r\n  Object.defineProperty(target, key, {\r\n    get() {\r\n      console.log('用户取值了')\r\n      // 取值的时候，会执行get\r\n      return value\r\n    },\r\n    set(newValue) {\r\n      // 修改的时候，会执行set\r\n      console.log('用户设置值了')\r\n      if (newValue === value) return\r\n      observe(newValue)\r\n      value = newValue\r\n    },\r\n  })\r\n}\r\n\r\nexport function observe(data) {\r\n  if (typeof data !== 'object' || data == null) {\r\n    return // 只对对象进行劫持\r\n  }\r\n  if(data.__ob__ instanceof Observer) { // 说明这个对象被代理过了\r\n    return data.__ob__\r\n  }\r\n  // 如果一个对象被劫持，那就不需要再被劫持了(要判断一个对象是否被劫持过，可以增添实例，用实例判断是否被劫持过)\r\n  return new Observer(data)\r\n}\r\n","import { observe } from './observe/index'\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options // 获取所有的选项\r\n  if (opts.data) {\r\n    initData(vm)\r\n  }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n  Object.defineProperty(vm, key, { // vm.name\r\n    get() {\r\n      return vm[target][key] // vm._data.name\r\n    },\r\n    set(newValue) {\r\n      vm[target][key] = newValue\r\n    }\r\n  })\r\n}\r\n\r\nfunction initData(vm) {\r\n  let data = vm.$options.data // data 可能是对象或者函数\r\n  data = typeof data === 'function' ? data.call(vm) : data\r\n  console.log(data)\r\n  vm._data = data\r\n  // 对数据进行劫持\r\n  observe(data)\r\n  // 将 vm._data 用 vm 来代理就可以了\r\n  for(let key in data) {\r\n    proxy(vm, '_data', key)\r\n  }\r\n}\r\n","import complieToFunction from './compiler/'\r\nimport { mountComponent } from './lifecycle'\r\nimport { initState } from './state'\r\n\r\n// 给 Vue 增加 init 方法\r\nexport function initMixin(Vue) {\r\n  // 用于初始化操作\r\n  Vue.prototype._init = function (options) {\r\n    // vue vm $options 就是获取用户的配置\r\n    const vm = this\r\n    vm.$options = options // 将用户的选项挂载到实例上\r\n    // 初始化状态\r\n    initState(vm)\r\n    // TODO 其他操作\r\n    if (options.el) {\r\n      vm.$mount(options.el) // 实现数据的挂载\r\n    }\r\n  }\r\n  Vue.prototype.$mount = function (el) {\r\n    const vm = this\r\n    el = document.querySelector(el)\r\n    let ops = vm.$options\r\n    if (!ops.render) {\r\n      // 先进行查找有没有 render 函数\r\n      let template // 没有 render 开一下是否写了 template，没写 template 采用外部的 template\r\n      if (!ops.template && el) {\r\n        // 没有写模板，但是有 el\r\n        template = el.outerHTML\r\n      } else {\r\n        // 写了 template 就有，写了的 template\r\n        if (el) {\r\n          template = ops.template\r\n        }\r\n      }\r\n      // 写了 template 就用写了的 template\r\n      if(template) {\r\n        // 需要对模板进行编译\r\n        const render = complieToFunction(template)\r\n        ops.render = render\r\n      }\r\n    }\r\n    mountComponent(vm, el) // 组件的挂载\r\n    \r\n    \r\n    // 最终就可以获取 render 方法\r\n    // script 标签引用的 vue.global.js 这个编译过程是在浏览器运行的\r\n    // runtime 不包含模板编译，整个编译是打包的时候通过 loader 来转义 .vue 文件的，用 runtime 的时候不能使用模板 template(.vue 中的模板，因为.vue 中的模板是靠 loader 运行的)\r\n  }\r\n}\r\n","import { initMixin } from './init'\r\nimport { initLifeCycle } from './lifecycle'\r\n\r\nfunction Vue(options) {\r\n  this._init(options)\r\n}\r\n\r\ninitMixin(Vue) // 扩展了 init 方法\r\ninitLifeCycle(Vue)\r\n\r\nexport default Vue\r\n"],"names":["ncname","qnameCapture","concat","startTagOpen","RegExp","endTag","attribute","startTagclose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","_loop","i","obj","split","forEach","item","_item$split","_item$split2","_slicedToArray","key","JSON","stringify","slice","defaultTagRE","gen","console","log","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","child","ast","code","complieToFunction","template","render","Function","createElementVNode","vm","data","_len","arguments","Array","_key","vnode","createTextVNode","undefined","createElm","el","document","createElement","patchProps","appendChild","createTextNode","props","styleName","style","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","initLifeCycle","Vue","prototype","_update","$el","_c","apply","call","_v","_s","_typeof","_render","$options","mountComponent","oldArrayProto","newArrayProto","Object","create","methods","method","_oldArrayProto$method","args","result","inserted","ob","__ob__","observeArray","Observer","_classCallCheck","defineProperty","enumerable","isArray","__proto__","walk","_createClass","keys","defineReactive","observe","target","get","set","newValue","initState","opts","initData","proxy","_data","initMixin","_init","options","$mount","querySelector","ops","outerHTML"],"mappings":"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"}