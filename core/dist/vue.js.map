{"version":3,"file":"vue.js","sources":["../src/compiler/index.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\n// 匹配到的是分组是一个标签名， <xxx 匹配到的是开始标签的名字\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`)\r\nconsole.log(startTagOpen)\r\n// 匹配的是 </xxx> 最终匹配到的分组就是结束标签的名字\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)\r\nconsole.log(endTag)\r\n// 第一个分组就是属性的 key value，就是分组 3/4/5\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\nconsole.log(attribute)\r\n// <div> <br />\r\nconst startTagclose = /^\\s*(\\/?)>/\r\nconsole.log(startTagclose)\r\n// 匹配到的内容是 {{}} 中的变量\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\nconsole.log(defaultTagRE)\r\n\r\n// vue3 采用的不是正则\r\n// 对模板进行编译处理\r\n\r\n/*\r\n  {\r\n    tag: 'div,\r\n    type: 1,\r\n    attrs: [{name, age. address}],\r\n    parent: null,\r\n    children: []\r\n  }\r\n\r\n\r\n*/\r\n\r\n\r\nfunction parseHTML(html) {\r\n  // 最终需要转换为一棵抽象语法树\r\n  function start(tag, attrs) {\r\n    console.log('开始', tag, attrs)\r\n  }\r\n  function chars(text) {\r\n    console.log('文本', text)\r\n\r\n  }\r\n  function end(tag) {\r\n    console.log('结束', tag)\r\n\r\n  }\r\n  // html 第一个肯定是一个 <\r\n  function advance(n) {\r\n    html = html.substring(n)\r\n  }\r\n  function parseStartTag() {\r\n    const start = html.match(startTagOpen)\r\n    console.log(start)\r\n    if (start) {\r\n      const match = {\r\n        tagName: start[1], // 标签名\r\n        attrs: [],\r\n      }\r\n      advance(start[0].length)\r\n      // 如果不是开始标签的结束，就一直匹配下去\r\n      let attr, end\r\n      while (!(end = html.match(startTagclose)) && (attr = html.match(attribute))) {\r\n        advance(attr[0].length)\r\n        match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] || true })\r\n      }\r\n      if (end) {\r\n        advance(end[0].length)\r\n      }\r\n      // console.log(match)\r\n      return match\r\n    }\r\n\r\n    console.log(html)\r\n    return false // 不是开始标签\r\n  }\r\n  while (html) {\r\n    // 如果 textEnd 为 0，说明是一个开始标签的或结束标签\r\n    // 如果 textEnd > 0，则说明是文本的结束位置\r\n    let textEnd = html.indexOf('<') // 如果 indexOf 中的索引是 0，则说明是一个标签\r\n    if (textEnd === 0) {\r\n      const startTagMatch = parseStartTag() // 开始标签的匹配\r\n      if (startTagMatch) { // 解析到的开始标签\r\n        // console.log(html)\r\n        start(startTagMatch.tagName, startTagMatch.attrs)\r\n        continue\r\n      }\r\n      let endTagMatch = html.match(endTag)\r\n      if(endTagMatch) {\r\n        advance(endTagMatch[0].length)\r\n        end(endTagMatch[1])\r\n        continue\r\n      }\r\n    }\r\n    if (textEnd > 0) {\r\n      let text = html.substring(0, textEnd) // 文本内容\r\n      if (text) {\r\n        chars(text)\r\n        advance(text.length) // 解析到的文本\r\n      }\r\n    }\r\n  }\r\n  console.log(html)\r\n}\r\n\r\nexport default function complieToFunction(template) {\r\n  // 1. 将 template 转换为 ast 语法树\r\n  let ast = parseHTML(template)\r\n  // 2. 生成 render 方法(render 方法返回的结果就是虚拟 DOM)\r\n\r\n  // console.log(template)\r\n}\r\n","\r\n// 对数组重写数组中的部分方法（能够修改数组本身）\r\nlet oldArrayProto = Array.prototype // 获取数组的原型\r\n\r\n// newArrayProto.__proto__ = oldArrayProto\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n\r\nlet methods = [ // 找到所有可以修改数组本身的方法\r\n  'push',\r\n  'pop',\r\n  'shift',\r\n  'unshift',\r\n  'reverse',\r\n  'sort',\r\n  'splice'\r\n] // concat、slice 等方法都不会改变原数组\r\n\r\nmethods.forEach(method => {\r\n  newArrayProto[method] = function(...args) { // 重写了数组的方法\r\n    // push()\r\n    const result = oldArrayProto[method].call(this, ...args) // 内部调用原来的方法\r\n    console.log('method', method)\r\n    // 我们需要对新增的数据再次进行劫持\r\n    let inserted\r\n    let ob = this.__ob__\r\n    switch(method) {\r\n      case 'push':\r\n      case 'unshift':\r\n        inserted = args\r\n        break\r\n      case 'splice':\r\n        inserted = args.slice(2)\r\n        break\r\n      defualt:\r\n        break\r\n    }\r\n    console.log(inserted) // 新增的内容\r\n    if(inserted) {\r\n      ob.observeArray(inserted)\r\n    }\r\n    // 我们需要对新增的数据再次进行劫持\r\n    return result\r\n  }\r\n})\r\n\r\n\r\n","import { newArrayProto } from './array'\r\n\r\nclass Observer {\r\n  constructor(data) {\r\n    // data.__ob__ = this // 给数据加了一个标识，如果数据上有 __ob__，则说明这个属性被观测过，！！！此写法会死循环！！！\r\n    Object.defineProperty(data, '__ob__', {\r\n      value: this,\r\n      enumerable: false\r\n    }) // 改成不可枚举\r\n    // Object.definePropetry 只能劫持已经存在的属性，后增或者删除的不可以\r\n    if(Array.isArray(data)) {\r\n      // 重写数组中的方法，7个可以直接修改数组本身的方法\r\n      data.__proto__ = newArrayProto // 保留数组原有的特性，并且可以重写部分方法\r\n      this.observeArray(data)\r\n    } else {\r\n      this.walk(data)\r\n    }\r\n  }\r\n  walk(data) {\r\n    // 循环对象，对属性依次劫持\r\n    // \"重新定义\"属性，性能比较差\r\n    Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n  }\r\n  observeArray(data) {\r\n    data.forEach(item => observe(item))\r\n  }\r\n}\r\n\r\nexport function defineReactive(target, key, value) {\r\n  observe(value) // 对所有的对象都进行属性劫持\r\n  // 闭包\r\n  Object.defineProperty(target, key, {\r\n    get() {\r\n      console.log('用户取值了')\r\n      // 取值的时候，会执行get\r\n      return value\r\n    },\r\n    set(newValue) {\r\n      // 修改的时候，会执行set\r\n      console.log('用户设置值了')\r\n      if (newValue === value) return\r\n      observe(newValue)\r\n      value = newValue\r\n    },\r\n  })\r\n}\r\n\r\nexport function observe(data) {\r\n  if (typeof data !== 'object' || data == null) {\r\n    return // 只对对象进行劫持\r\n  }\r\n  if(data.__ob__ instanceof Observer) { // 说明这个对象被代理过了\r\n    return data.__ob__\r\n  }\r\n  // 如果一个对象被劫持，那就不需要再被劫持了(要判断一个对象是否被劫持过，可以增添实例，用实例判断是否被劫持过)\r\n  return new Observer(data)\r\n}\r\n","import { observe } from './observe/index'\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options // 获取所有的选项\r\n  if (opts.data) {\r\n    initData(vm)\r\n  }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n  Object.defineProperty(vm, key, { // vm.name\r\n    get() {\r\n      return vm[target][key] // vm._data.name\r\n    },\r\n    set(newValue) {\r\n      vm[target][key] = newValue\r\n    }\r\n  })\r\n}\r\n\r\nfunction initData(vm) {\r\n  let data = vm.$options.data // data 可能是对象或者函数\r\n  data = typeof data === 'function' ? data.call(vm) : data\r\n  console.log(data)\r\n  vm._data = data\r\n  // 对数据进行劫持\r\n  observe(data)\r\n  // 将 vm._data 用 vm 来代理就可以了\r\n  for(let key in data) {\r\n    proxy(vm, '_data', key)\r\n  }\r\n}\r\n","import complieToFunction from './compiler/'\r\nimport { initState } from './state'\r\n\r\n// 给 Vue 增加 init 方法\r\nexport function initMixin(Vue) {\r\n  // 用于初始化操作\r\n  Vue.prototype._init = function (options) {\r\n    // vue vm $options 就是获取用户的配置\r\n    const vm = this\r\n    vm.$options = options // 将用户的选项挂载到实例上\r\n    // 初始化状态\r\n    initState(vm)\r\n    // TODO 其他操作\r\n    if (options.el) {\r\n      vm.$mount(options.el) // 实现数据的挂载\r\n    }\r\n  }\r\n  Vue.prototype.$mount = function (el) {\r\n    const vm = this\r\n    el = document.querySelector(el)\r\n    let ops = vm.$options\r\n    if (!ops.render) {\r\n      // 先进行查找有没有 render 函数\r\n      let template // 没有 render 开一下是否写了 template，没写 template 采用外部的 template\r\n      if (!ops.template && el) {\r\n        // 没有写模板，但是有 el\r\n        template = el.outerHTML\r\n      } else {\r\n        // 写了 template 就有，写了的 template\r\n        if (el) {\r\n          template = ops.template\r\n        }\r\n      }\r\n      // 写了 template 就用写了的 template\r\n      if(template) {\r\n        // 需要对模板进行编译\r\n        const render = complieToFunction(template)\r\n        ops.render = render\r\n      }\r\n    }\r\n    ops.render // 最终就可以获取 render 方法\r\n    // script 标签引用的 vue.global.js 这个编译过程是在浏览器运行的\r\n    // runtime 不包含模板编译，整个编译是打包的时候通过 loader 来转义 .vue 文件的，用 runtime 的时候不能使用模板 template(.vue 中的模板，因为.vue 中的模板是靠 loader 运行的)\r\n  }\r\n}\r\n","import { initMixin } from './init'\r\n\r\nfunction Vue(options) {\r\n  this._init(options)\r\n}\r\n\r\ninitMixin(Vue) // 扩展了 init 方法\r\n\r\nexport default Vue\r\n"],"names":["ncname","qnameCapture","concat","startTagOpen","RegExp","console","log","endTag","attribute","startTagclose","defaultTagRE","parseHTML","html","start","tag","attrs","chars","text","end","advance","n","substring","parseStartTag","match","tagName","length","attr","push","name","value","textEnd","indexOf","startTagMatch","endTagMatch","complieToFunction","template","oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","_oldArrayProto$method","_len","arguments","args","_key","result","call","apply","inserted","ob","__ob__","slice","observeArray","Observer","data","_classCallCheck","defineProperty","enumerable","isArray","__proto__","walk","_createClass","key","keys","defineReactive","item","observe","target","get","set","newValue","_typeof","initState","vm","opts","$options","initData","proxy","_data","initMixin","Vue","_init","options","el","$mount","document","querySelector","ops","render","outerHTML"],"mappings":"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"}